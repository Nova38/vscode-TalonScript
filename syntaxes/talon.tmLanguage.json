{
  "name": "TalonScript",
  "patterns": [
    {
      "include": "#body-header"
    },
    {
      "include": "#header"
    },
    {
      "include": "#body-noheader"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#settings"
    }
  ],
  "repository": {
    "header": {
      "begin": "(?=^app:|title:|os:)",
      "end": "(?=^-$)",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#context"
        }
      ]
    },
    "context": {
      "match": "(.*): (.*)",
      "captures": {
        "1": {
          "name": "entity.name.tag.talon",
          "patterns": [
            {
              "match": "(and |or )",
              "name": "keyword.operator.talon"
            }
          ]
        },
        "2": {
          "name": "entity.name.type.talon",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#regexp"
            }
          ]
        }
      }
    },
    "regexp": {
      "begin": "(/)",
      "end": "(/)",
      "name": "string.regexp.talon",
      "patterns": [
        {
          "match": "\\.",
          "name": "support.other.match.any.regexp"
        },
        {
          "match": "\\$",
          "name": "support.other.match.end.regexp"
        },
        {
          "match": "\\^",
          "name": "support.other.match.begin.regexp"
        },
        {
          "match": "\\\\\\.|\\\\\\*|\\\\\\^|\\\\\\$|\\\\\\+|\\\\\\?",
          "name": "constant.character.escape.talon"
        },
        {
          "match": "\\[(\\\\\\]|[^\\]])*\\]",
          "name": "constant.other.set.regexp"
        },
        {
          "match": "\\*|\\+|\\?",
          "name": "keyword.operator.quantifier.regexp"
        }
      ]
    },
    "body-header": {
      "begin": "^-$",
      "end": "(?=not)possible",
      "patterns": [
        {
          "include": "#body-noheader"
        }
      ]
    },
    "body-noheader": {
      "patterns": [
        {
          "include": "#qstring-long"
        },
        {
          "include": "#comment"
        },
        {
          "include": "#rule-definition"
        },
        {
          "include": "#statement-indented"
        }
      ]
    },
    "capture": {
      "match": "(\\<[a-zA-Z0-9._]+\\>)",
      "name": "variable.parameter.talon"
    },
    "list": {
      "match": "({[a-zA-Z0-9._]+?})",
      "name": "string.interpolated.talon"
    },
    "comment": {
      "match": "(\\s*#.*)$",
      "name": "comment.line.number-sign.talon"
    },
    "operator": {
      "match": "\\s(\\+|-|\\*|/|or)\\s",
      "name": "keyword.operator.talon"
    },
    "number": {
      "match": "(?<=\\b)\\d+(\\.\\d+)?",
      "name": "constant.numeric.talon"
    },
    "fstring": {
      "match": "({.+?})",
      "name": "constant.character.format.placeholder.talon"
    },
    "qstring": {
      "patterns": [
        {
          "include": "#qstring-double"
        },
        {
          "include": "#qstring-single"
        }
      ]
    },
    "string-body": {
      "patterns": [
        {
          "match": "{{|}}",
          "name": "string.quoted.double.talon"
        },
        {
          "match": "\\\\\\\\|\\\\n|\\\\t|\\\\r|\\\\\"|\\\\'",
          "name": "constant.character.escape.python"
        },
        {
          "include": "#fstring"
        },
        {
          "include": "#key-mods"
        },
        {
          "include": "#key-prefixes"
        }
      ]
    },
    "qstring-double": {
      "match": "(\")(.*?(?<!\\\\))(\")",
      "name": "string.quoted.double.talon",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.talon"
        },
        "2": {
          "patterns": [
            {
              "include": "#string-body"
            }
          ]
        },
        "3": {
          "name": "punctuation.definition.string.end.talon"
        }
      }
    },
    "qstring-single": {
      "match": "(')(.*?(?<!\\\\))(')",
      "name": "string.quoted.single.talon",
      "captures": {
        "1": {
          "name": "punctuation.definition.string.begin.talon"
        },
        "2": {
          "patterns": [
            {
              "include": "#string-body"
            }
          ]
        },
        "3": {
          "name": "punctuation.definition.string.end.talon"
        }
      }
    },
    "qstring-long": {
      "begin": "\\s*(\"\"\"|''')",
      "end": "(\\1)",
      "name": "string.quoted.double.talon",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.talon"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.talon"
        }
      },
      "patterns": [
        {
          "include": "#string-body"
        }
      ]
    },
    "action-key": {
      "match": "key(\\()(.*)(\\))",
      "name": "entity.name.function.talon",
      "captures": {
        "1": {
          "name": "punctuation.definition.parameters.begin.talon"
        },
        "2": {
          "name": "variable.parameter.talon",
          "patterns": [
            {
              "include": "#qstring"
            },
            {
              "include": "#key-prefixes"
            },
            {
              "include": "#key-mods"
            }
          ]
        },
        "3": {
          "name": "punctuation.definition.parameters.key.talon"
        }
      }
    },
    "key-prefixes": {
      "match": "(ctrl|shift|cmd|alt|win|super)(-)",
      "captures": {
        "1": {
          "name": "keyword.control.talon"
        },
        "2": {
          "name": "keyword.operator.talon"
        }
      }
    },
    "key-mods": {
      "match": "(:)(up|down|\\d+)",
      "captures": {
        "1": {
          "name": "keyword.operator.talon"
        },
        "2": {
          "name": "keyword.control.talon"
        }
      },
      "name": "keyword.operator.talon"
    },
    "argsep": {
      "match": ",",
      "name": "punctuation.separator.talon"
    },
    "action": {
      "begin": "([a-zA-Z0-9._]+)(\\()",
      "end": "(\\))",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.talon",
          "patterns": [
            {
              "match": "\\.",
              "name": "punctuation.separator.talon"
            }
          ]
        },
        "2": {
          "name": "punctuation.definition.parameters.begin.talon"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.parameters.end.talon"
        }
      },
      "patterns": [
        {
          "include": "#action"
        },
        {
          "include": "#qstring"
        },
        {
          "include": "#argsep"
        },
        {
          "include": "#number"
        },
        {
          "include": "#operator"
        }
      ],
      "name": "variable.parameter.talon"
    },
    "action-action": {
      "match": "action(\\()(.*)(\\))",
      "name": "entity.name.function.talon",
      "captures": {
        "1": {
          "name": "punctuation.definition.parameters.begin.talon"
        },
        "2": {
          "name": "variable.parameter.talon"
        },
        "3": {
          "name": "punctuation.definition.parameters.end.talon"
        }
      }
    },
    "rule-definition": {
      "match": "^([^\\s][^\"']*):\\s*(.*)$",
      "captures": {
        "1": {
          "name": "entity.name.tag.talon",
          "patterns": [
            {
              "match": "settings(\\(\\))",
              "name": "entity.name.function.talon",
              "captures": {
                "1": {
                  "name": "punctuation.definition.parameters.begin.talon"
                }
              }
            },
            {
              "match": "^\\^",
              "name": "string.regexp.talon"
            },
            {
              "match": "\\$$",
              "name": "string.regexp.talon"
            },
            {
              "include": "#action-key"
            },
            {
              "include": "#action-action"
            },
            {
              "include": "#capture"
            },
            {
              "include": "#list"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "assignment": {
      "match": "(\\S*)(\\s?=\\s?)(.*)",
      "captures": {
        "1": {
          "name": "variable.other.talon"
        },
        "2": {
          "name": "keyword.operator.talon"
        },
        "3": {
          "name": "variable.other.talon",
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#operator"
            },
            {
              "include": "#number"
            },
            {
              "include": "#qstring"
            }
          ]
        }
      }
    },
    "statement-indented": {
      "match": "^\\s+(.*)$",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "statement": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#action-key"
        },
        {
          "include": "#action"
        },
        {
          "include": "#qstring"
        },
        {
          "include": "#assignment"
        },
        {
          "include": "#operator"
        }
      ]
    }
  },
  "scopeName": "source.talon"
}
