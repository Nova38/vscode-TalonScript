{
  "name": "TalonScript",
  "patterns": [
    {
      "include": "#body"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#context"
    },
    {
      "include": "#settings"
    }
  ],
  "repository": {
    "context": {
      "match": "(.*): (.*)",
      "captures": {
        "1": {
          "name": "entity.name.tag.talon",
          "patterns": [
            {
              "match": "(and |or )",
              "name": "keyword.operator.talon"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "match": "(/.*/)",
              "name": "string.regexp.talon"
            },
            {
              "match": ".*",
              "name": "entity.name.type.talon"
            }
          ]
        }
      }
    },
    "settings": {
      "begin": "^settings\\(\\):",
      "end": "^(?=\\S)",
      "name": "entity.name.section.talon",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "match": "^\\s+(.*)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#assignment"
                }
              ]
            }
          }
        }
      ]
    },
    "body": {
      "begin": "^-$",
      "end": "(?=not)possible",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#rule-definition"
        },
        {
          "include": "#statement-indented"
        }
      ]
    },
    "capture": {
      "match": "(\\<[a-zA-Z0-9._]+\\>)",
      "name": "variable.parameter.talon"
    },
    "list": {
      "match": "({[a-zA-Z0-9._]+?})",
      "name": "string.interpolated.talon"
    },
    "comment": {
      "match": "^(\\s*#.*)$",
      "name": "comment.line.number-sign.talon"
    },
    "fstring": {
      "match": "({[a-z0-9]+})",
      "name": "constant.character.format.placeholder.talon"
    },
    "qstring": {
      "patterns": [
        {
          "include": "#qstring-double"
        },
        {
          "include": "#qstring-single"
        }
      ]
    },
    "qstring-double": {
      "match": "(\".+?\")",
      "name": "string.quoted.double.talon",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#fstring"
            }
          ]
        }
      }
    },
    "qstring-single": {
      "match": "('.+?')",
      "name": "string.quoted.single.talon",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#fstring"
            }
          ]
        }
      }
    },
    "action-key": {
      "match": "key\\((.*)\\)",
      "name": "entity.name.function.talon",
      "captures": {
        "1": {
          "name": "variable.parameter.talon",
          "patterns": [
            {
              "include": "#qstring"
            },
            {
              "include": "#key-prefixes"
            },
            {
              "include": "#key-mods"
            }
          ]
        }
      }
    },
    "key-prefixes": {
      "match": "(ctrl-|shift-|cmd-|alt-|win-|super-)",
      "name": "keyword.control.talon"
    },
    "key-mods": {
      "match": "(:up|:down|:\\d+)",
      "name": "keyword.operator.talon"
    },
    "action": {
      "match": "[a-zA-Z0-9._]+\\((.*)\\)",
      "name": "entity.name.function.talon",
      "captures": {
        "1": {
          "name": "variable.parameter.talon",
          "patterns": [
            {
              "include": "#qstring"
            },
            {
              "include": "#number"
            }
          ]
        }
      }
    },
    "action-action": {
      "match": "action\\((.*)\\)",
      "name": "entity.name.function.talon",
      "captures": {
        "1": {
          "name": "variable.parameter.talon"
        }
      }
    },
    "rule-definition": {
      "match": "^(.*):\\s+?(.*)?$",
      "captures": {
        "1": {
          "name": "entity.name.section.talon",
          "patterns": [
            {
              "include": "#action-key"
            },
            {
              "include": "#action-action"
            },
            {
              "include": "#capture"
            },
            {
              "include": "#list"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "operators": {
      "match": "\\s?(\\+|-|\\*|/|or)\\s?",
      "name": "keyword.operator.talon"
    },
    "number": {
      "match": "\\d+(\\.\\d+)?",
      "name": "constant.numeric.talon"
    },
    "assignment": {
      "match": "(\\S*)(\\s?=\\s?)(.*)",
      "captures": {
        "1": {
          "name": "variable.other.talon"
        },
        "2": {
          "name": "keyword.operator.talon"
        },
        "3": {
          "name": "variable.other.talon",
          "patterns": [
            {
              "include": "#operators"
            },
            {
              "include": "#number"
            },
            {
              "include": "#qstring"
            }
          ]
        }
      }
    },
    "statement-indented": {
      "match": "^\\s+(.*)$",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#assignment"
            },
            {
              "include": "#statement"
            }
          ]
        }
      }
    },
    "statement": {
      "patterns": [
        {
          "include": "#action-key"
        },
        {
          "include": "#action"
        },
        {
          "include": "#qstring"
        }
      ]
    }
  },
  "scopeName": "source.talon"
}
